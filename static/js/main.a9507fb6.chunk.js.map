{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","Section","title","section","contactsActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","contact","toLowerCase","includes","toLocaleLowerCase","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","Error","nameId","numberId","onSubmit","newName","preventDefault","find","toast","error","form","htmlFor","label","type","onChange","input","pattern","required","button","Filter","trim","ContactsList","TransitionGroup","component","list","map","CSSTransition","classNames","timeout","item","onClick","App","autoClose","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistedStore","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a9507fb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2APus\",\"item\":\"ContactList_item__12dIf\",\"button\":\"ContactList_button__2Zhz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1hirF\",\"title\":\"Section_title__5cCcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3TIU2\",\"label\":\"Filter_label__3D7wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__37lwG\"};","import React from \"react\";\nimport s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: \"contacts/add\",\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//   type: \"contacts/delete\",\r\n//   payload: contactId,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//   type: \"contacts/changeFilter\",\r\n//   payload: value,\r\n// });\r\n\r\nconst contactsActions = {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n};\r\n\r\nexport default contactsActions;\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  return items.filter(\r\n    (contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()) ||\r\n      contact.number.includes(filter)\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport { toast } from \"react-toastify\";\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const checkDublicateName = (newName) => {\n    return items.find(({ name }) => name === newName);\n  };\n\n  const handleChange = (e) => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (checkDublicateName(name)) {\n      toast.error(`${name} already exists in the contact book`);\n      return;\n    }\n\n    dispatch(contactsActions.addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const nameId = shortid.generate();\n  const numberId = shortid.generate();\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor={nameId} className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameId}\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor={numberId} className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={numberId}\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          className={s.input}\n          value={value}\n          onChange={(e) =>\n            dispatch(contactsActions.changeFilter(e.currentTarget.value.trim()))\n          }\n        />\n      </label>\n      ;\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactsList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} classNames={\"animate\"} timeout={800}>\n          <li className={s.item}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => dispatch(contactsActions.deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: onResultSearch(items, filter),\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n// });\n\nexport default ContactsList;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Container from \"./Components/Container\";\nimport Section from \"./Components/Section\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactsList from \"./Components/ContactList\";\n\nconst App = () => {\n  return (\n    <>\n      <Container>\n        <Section title=\"My Phonebook\">\n          <ContactForm />\n        </Section>\n\n        <Section title=\"My Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      </Container>\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"contacts/add\":\r\n//       return [...state, payload];\r\n\r\n//     case \"contacts/delete\":\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"contacts/changeFilter\":\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst persistedStore = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default persistedStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1YDCu\",\"label\":\"ContactForm_label__C9o0s\",\"input\":\"ContactForm_input__3g4Wi\",\"button\":\"ContactForm_button__3ofpG\"};"],"sourceRoot":""}