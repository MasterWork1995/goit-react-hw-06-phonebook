{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Error","reset","nameId","shortid","generate","numberId","preventDefault","form","htmlFor","label","type","onChange","id","input","pattern","required","button","Filter","ContactsList","contacts","onDeleteContact","TransitionGroup","component","list","map","CSSTransition","classNames","timeout","item","onClick","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setstate","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","newName","find","alert","contact","prevContacts","toLowerCase","includes","toLocaleLowerCase","contactId","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,uICWnHC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,iBCYjBI,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEI,QAAtB,UACGD,GAAS,oBAAIJ,UAAWC,IAAEG,MAAjB,SAAyBA,IAClCL,M,gBCkEQO,EAtEK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GAEpB,OADcA,EAAEC,cAAcN,MAE5B,IAAK,OACHC,EAAQI,EAAEC,cAAcC,OACxB,MAEF,IAAK,SACHJ,EAAUE,EAAEC,cAAcC,OAC1B,MAEF,QACE,MAAM,IAAIC,QAUVC,EAAQ,WACZR,EAAQ,IACRE,EAAU,KAGNO,EAASC,IAAQC,WACjBC,EAAWF,IAAQC,WACzB,OACE,uBAAMd,SAda,SAACO,GACpBA,EAAES,iBACFhB,EAASE,EAAME,GACfO,KAW8BlB,UAAWC,IAAEuB,KAA3C,UACE,wBAAOC,QAASN,EAAQnB,UAAWC,IAAEyB,MAArC,iBAEE,uBACEC,KAAK,OACLlB,KAAK,OACLO,MAAOP,EACPmB,SAAUf,EACVgB,GAAIV,EACJnB,UAAWC,IAAE6B,MACbC,QAAQ,yHACR3B,MAAM,kcACN4B,UAAQ,OAGZ,wBAAOP,QAASH,EAAUtB,UAAWC,IAAEyB,MAAvC,mBAEE,uBACEC,KAAK,MACLlB,KAAK,SACLO,MAAOL,EACPiB,SAAUf,EACVgB,GAAIP,EACJtB,UAAWC,IAAE6B,MACbC,QAAQ,yFACR3B,MAAM,giBACN4B,UAAQ,OAGZ,wBAAQL,KAAK,SAAS3B,UAAWC,IAAEgC,OAAnC,6B,iBCnDSC,EAZA,SAAC,GAAD,IAAGlB,EAAH,EAAGA,MAAOY,EAAV,EAAUA,SAAV,OACb,wBAAO5B,UAAWC,IAAEyB,MAApB,kCAEE,uBAAOC,KAAK,OAAO3B,UAAWC,IAAE6B,MAAOd,MAAOA,EAAOY,SAAUA,Q,iCC+BpDO,EAjCM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAChC,OACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKvC,UAAWC,IAAEuC,KAA7C,SACGJ,EAASK,KAAI,gBAAGZ,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,cAAC+B,EAAA,EAAD,CAAwBC,WAAY,UAAWC,QAAS,IAAxD,SACE,qBAAI5C,UAAWC,IAAE4C,KAAjB,UACE,8BAAIpC,EAAJ,OACA,4BAAIE,IACJ,wBACEgB,KAAK,SACL3B,UAAWC,IAAEgC,OACba,QAAS,kBAAMT,EAAgBR,IAHjC,wBAJgBA,SC0DbkB,EA1DH,WACV,MCRsB,SAACC,EAAKC,GAC5B,MAA0BzC,oBAAS,WAAO,IAAD,EACvC,iBAAO0C,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,WAA9C,QAAuDC,KADzD,mBAAOM,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQV,EAAKE,KAAKS,UAAUJ,MAC/C,CAACP,EAAKO,IAEF,CAACA,EAAOC,GDDiBI,CAAgB,WAAY,IAA5D,mBAAOxB,EAAP,KAAiByB,EAAjB,KACA,EAA4BrD,mBAAS,IAArC,mBAAOsD,EAAP,KAAeC,EAAf,KAuCA,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS3D,MAAM,eAAf,SACE,cAAC,EAAD,CAAaG,SApCE,SAACE,EAAME,GAC1B,GALmBqD,EAKFvD,EAJV2B,EAAS6B,MAAK,qBAAGxD,OAAoBuD,KAI5C,CALkB,IAACA,EAgBnBE,MAAM,GAAD,OAAIzD,EAAJ,gCAXL,CACE,IAAM0D,EAAU,CACdtC,GAAIT,IAAQC,WACZZ,OACAE,UAGFkD,GAAY,SAACO,GAAD,4BAAsBA,GAAtB,CAAoCD,aA+BhD,eAAC,EAAD,CAAS/D,MAAM,cAAf,UACE,cAAC,EAAD,CAAQY,MAAO8C,EAAQlC,SAnBN,SAACd,GACtBiD,EAAUjD,EAAEC,cAAcC,UAmBtB,cAAC,EAAD,CACEoB,SAhBCA,EAAS0B,QACd,SAACK,GAAD,OACEA,EAAQ1D,KAAK4D,cAAcC,SAASR,EAAOS,sBAC3CJ,EAAQxD,OAAO2D,SAASR,MActBzB,gBA5BgB,SAACmC,GACvBX,GAAY,SAACO,GAAD,OACVA,EAAaN,QAAO,SAACK,GAAD,OAAaA,EAAQtC,KAAO2C,kBE5BtDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4a8944ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2APus\",\"item\":\"ContactList_item__12dIf\",\"button\":\"ContactList_button__2Zhz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1hirF\",\"title\":\"Section_title__5cCcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3TIU2\",\"label\":\"Filter_label__3D7wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__37lwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1YDCu\",\"label\":\"ContactForm_label__C9o0s\",\"input\":\"ContactForm_input__3g4Wi\",\"button\":\"ContactForm_button__3ofpG\"};","import React from \"react\";\nimport s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React, { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case \"name\":\n        setName(e.currentTarget.value);\n        break;\n\n      case \"number\":\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const nameId = shortid.generate();\n  const numberId = shortid.generate();\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor={nameId} className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameId}\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor={numberId} className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={numberId}\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input type=\"text\" className={s.input} value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} classNames={\"animate\"} timeout={800}>\n          <li className={s.item}>\n            <p>{name}:</p>\n            <p>{number}</p>\n            <button\n              type=\"button\"\n              className={s.button}\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { useState } from \"react\";\nimport { useLocalStorage } from \"./hooks/useLocalStorage\";\nimport shortid from \"shortid\";\nimport Container from \"./Components/Container\";\nimport Section from \"./Components/Section\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactsList from \"./Components/ContactList\";\n\nconst App = () => {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\n  const [filter, setFilter] = useState(\"\");\n\n  const onCheckName = (newName) => {\n    return contacts.find(({ name }) => name === newName);\n  };\n\n  const onAddContact = (name, number) => {\n    if (!onCheckName(name)) {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      setContacts((prevContacts) => [...prevContacts, contact]);\n      return;\n    }\n\n    alert(`${name} is already in contacts`);\n  };\n\n  const onDeleteContact = (contactId) => {\n    setContacts((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const onChangeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const onResultSearch = () => {\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(filter.toLocaleLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  };\n\n  return (\n    <Container>\n      <Section title=\"My Phonebook\">\n        <ContactForm onSubmit={onAddContact} />\n      </Section>\n\n      <Section title=\"My Contacts\">\n        <Filter value={filter} onChange={onChangeFilter} />\n        <ContactsList\n          contacts={onResultSearch()}\n          onDeleteContact={onDeleteContact}\n        />\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setstate] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setstate];\n};\n\nexport { useLocalStorage };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}